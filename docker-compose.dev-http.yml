services:
  django-backend-dev-http:
    build:
      context: ./
      dockerfile: backend/Dockerfile
    container_name: django-backend-dev-http
    ports:
      - "8000:8000"
    depends_on: 
      - postgres-db-dev      
    env_file:
      - ".env"
    volumes:
      - "./backend:/backend"
      - "./backend/staticfiles:/backend/staticfiles"
    command: ["sh", "-c", "python manage.py collectstatic --noinput && python manage.py migrate && DJANGO_SETTINGS_MODULE=sheriff_crandy_project.dev_settings python manage.py runserver 0.0.0.0:8000"]
    networks:
      - "sc_backend_dev"

  vuejs-frontend-dev-http:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: vuejs-frontend-dev-http
    ports:
      - "8080:8080"
    env_file:
      - "./frontend/.env"
    volumes:
      - "./frontend:/frontend"
    command: ["sh", "-c", "npm run serve"]
    networks:
      - "sc_backend_dev"      

  postgres-db-dev:
    image: postgres:17
    environment: 
      POSTGRES_DB: ${DBNAME}
      POSTGRES_USER: ${DBUSER}
      POSTGRES_PASSWORD: ${DBPASSWORD}
    ports:
      - "5432:5432"
    env_file:
      - ".env"      
    volumes:
      - sc_postgres_data_dev:/var/lib/postgresql/data
    networks:
      - "sc_backend_dev"  

volumes:
  sc_postgres_data_dev:

networks:
  sc_backend_dev:
    driver: bridge